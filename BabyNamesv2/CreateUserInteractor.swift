//
//  CreateUserInteractor.swift
//  BabyNamesv2
//
//  Created by Felipe Caldas on 7/02/2016.
//  Copyright (c) 2016 FunkApps FMC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol CreateUserInteractorInput
{
    func createUser(request: CreateUserRequest)
    func fetchUser(request: CreateUserRequest)
}

protocol CreateUserInteractorOutput
{
    func presentSomething(response: CreateUserResponse)
}

class CreateUserInteractor: CreateUserInteractorInput
{
    var output: CreateUserInteractorOutput!
    var userWorker = UsersWorker(usersStore:UsersMemStore())
    
    // MARK: Business logic
    
    func createUser(request: CreateUserRequest)
    {
        print("Interactor createUser")
        let user = User(id: "1", firstName: request.firstName, email:  request.email, password: request.password)
        // NOTE: Pass the result to the Presenter
        userWorker.createUser(user, completionHandler: { (error) in
            let response = CreateUserResponse(error: error == nil, firstName: nil)
            self.output.presentSomething(response)
        })
    }
    
    func fetchUser(request: CreateUserRequest) {
        userWorker.fetchUser(request.id!, completionHandler: {(user, error) in
            let response = CreateUserResponse(error: error == nil, firstName: user?.firstName)
            self.output.presentSomething(response)
        })
    }
}
